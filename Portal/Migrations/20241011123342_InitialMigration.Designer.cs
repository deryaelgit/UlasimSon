// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Models.Admin;

#nullable disable

namespace Portal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241011123342_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portal.Models.Admin.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("Portal.Models.Admin.KanGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("KanGrubus");
                });

            modelBuilder.Entity("Portal.Models.Admin.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Portal.Models.Admin.Mudurluk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.ToTable("Mudurlukler");
                });

            modelBuilder.Entity("Portal.Models.Admin.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Portal.Models.Admin.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Portal.Models.Admin.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Portal.Models.Admin.Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MudurlukId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MudurlukId");

                    b.ToTable("Subeler");
                });

            modelBuilder.Entity("Portal.Models.Admin.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cinsiyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ehliyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KanGrubuId")
                        .HasColumnType("int");

                    b.Property<int?>("KanGrubuId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastQuizDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedeniDurum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenimDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<byte[]>("ProfileImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Puan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubeId")
                        .HasColumnType("int");

                    b.Property<string>("TcKimlik")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KanGrubuId");

                    b.HasIndex("KanGrubuId1");

                    b.HasIndex("SubeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Portal.Models.Admin.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracDenetim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AracPlakaId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AracPlakaId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("AracDenetimleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracDenetimGecmis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AracDenetimId")
                        .HasColumnType("int");

                    b.Property<int>("KontrolTuruId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AracDenetimId");

                    b.HasIndex("KontrolTuruId");

                    b.HasIndex("UserId");

                    b.ToTable("AracDenetimGecmisleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracPlaka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GuzergahId")
                        .HasColumnType("int");

                    b.Property<int?>("KoltukKapasitesi")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotorNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlakaNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlakaTuruId")
                        .HasColumnType("int");

                    b.Property<string>("SasiNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VizeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GuzergahId");

                    b.HasIndex("PlakaTuruId");

                    b.ToTable("AracPlakalari");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracSahibi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlakaId")
                        .HasColumnType("int");

                    b.Property<int>("PlakaSahipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlakaId");

                    b.HasIndex("PlakaSahipId");

                    b.ToTable("AracSahipleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.CezaYonetmelik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnahtarKelime")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Bent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CezaPuani")
                        .HasColumnType("int");

                    b.Property<int?>("Fikra")
                        .HasColumnType("int");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Madde")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlakaTuruId")
                        .HasColumnType("int");

                    b.Property<string>("Yonetmelik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OlusturanKullaniciId");

                    b.HasIndex("PlakaTuruId");

                    b.ToTable("CezaYonetmelikleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.Denetim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AracPlakaId")
                        .HasColumnType("int");

                    b.Property<int>("CezaDelilTipId")
                        .HasColumnType("int");

                    b.Property<int>("CezaDurumId")
                        .HasColumnType("int");

                    b.Property<int>("DenetimTuruId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AracPlakaId");

                    b.HasIndex("CezaDelilTipId");

                    b.HasIndex("CezaDurumId");

                    b.HasIndex("DenetimTuruId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Denetimler");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimCeza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CezaYonetmelikId")
                        .HasColumnType("int");

                    b.Property<int>("DenetimId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CezaYonetmelikId");

                    b.HasIndex("DenetimId");

                    b.HasIndex("UserId");

                    b.ToTable("DenetimCezalari");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimGecmisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CezaDurumId")
                        .HasColumnType("int");

                    b.Property<int>("DenetimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DurumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UyariSuresi")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CezaDurumId");

                    b.HasIndex("DenetimId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("DenetimGecmisleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimGecmisiFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DenetimGecmisiId")
                        .HasColumnType("int");

                    b.Property<int>("FotoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DenetimGecmisiId");

                    b.HasIndex("FotoId");

                    b.ToTable("AracDenetimGecmisiFotolari");
                });

            modelBuilder.Entity("Portal.Models.USYS.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("DataGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DosyaAdi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("DosyaTuruId")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Veri")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaTuruId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Fotolar");
                });

            modelBuilder.Entity("Portal.Models.USYS.Guzergah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeometriId")
                        .HasColumnType("int");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeometriId");

                    b.HasIndex("IlceId");

                    b.ToTable("Guzergahlar");
                });

            modelBuilder.Entity("Portal.Models.USYS.GuzergahZamanCizelge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("BaslangicSaati")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("BitisSaati")
                        .HasColumnType("time");

                    b.Property<int?>("GunId")
                        .HasColumnType("int");

                    b.Property<int>("GuzergahId")
                        .HasColumnType("int");

                    b.Property<double?>("Mesafe")
                        .HasColumnType("float");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("YerTuruId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GunId");

                    b.HasIndex("GuzergahId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.HasIndex("YerTuruId");

                    b.ToTable("GuzergahZamanCizelgeleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.LookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("Portal.Models.USYS.LookupList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attributes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LookUpId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LookUpId");

                    b.HasIndex("LookupListId");

                    b.HasIndex("UserId");

                    b.ToTable("LookupLists");
                });

            modelBuilder.Entity("Portal.Models.USYS.PlakaSahip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int?>("CinsiyetId")
                        .HasColumnType("int");

                    b.Property<int?>("KayitNumarasi")
                        .HasColumnType("int");

                    b.Property<string>("KimlikNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unvan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VergiNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinsiyetId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("PlakaSahipleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.UcretTakvim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GuzergahId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ucret")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GuzergahId");

                    b.ToTable("UcretTakvimleri");
                });

            modelBuilder.Entity("Portal.Models.Admin.Mudurluk", b =>
                {
                    b.HasOne("Portal.Models.Admin.Birim", "Birim")
                        .WithMany("Mudurlukler")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");
                });

            modelBuilder.Entity("Portal.Models.Admin.RolePermission", b =>
                {
                    b.HasOne("Portal.Models.Admin.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Portal.Models.Admin.Sube", b =>
                {
                    b.HasOne("Portal.Models.Admin.Mudurluk", "Mudurluk")
                        .WithMany("Subeler")
                        .HasForeignKey("MudurlukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mudurluk");
                });

            modelBuilder.Entity("Portal.Models.Admin.User", b =>
                {
                    b.HasOne("Portal.Models.Admin.KanGrubu", "KanGrubu")
                        .WithMany()
                        .HasForeignKey("KanGrubuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Portal.Models.Admin.KanGrubu", null)
                        .WithMany("Users")
                        .HasForeignKey("KanGrubuId1");

                    b.HasOne("Portal.Models.Admin.Sube", "Sube")
                        .WithMany("Users")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("KanGrubu");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("Portal.Models.Admin.UserRole", b =>
                {
                    b.HasOne("Portal.Models.Admin.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracDenetim", b =>
                {
                    b.HasOne("Portal.Models.USYS.AracPlaka", "AracPlaka")
                        .WithMany("AracDenetimleri")
                        .HasForeignKey("AracPlakaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", "Kullanici")
                        .WithMany("AracDenetimleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AracPlaka");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracDenetimGecmis", b =>
                {
                    b.HasOne("Portal.Models.USYS.AracDenetim", "AracDenetim")
                        .WithMany("AracDenetimGecmisleri")
                        .HasForeignKey("AracDenetimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", "KontrolTuru")
                        .WithMany()
                        .HasForeignKey("KontrolTuruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", null)
                        .WithMany("AracDenetimGecmisleri")
                        .HasForeignKey("UserId");

                    b.Navigation("AracDenetim");

                    b.Navigation("KontrolTuru");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracPlaka", b =>
                {
                    b.HasOne("Portal.Models.USYS.Guzergah", "Guzergah")
                        .WithMany()
                        .HasForeignKey("GuzergahId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Portal.Models.USYS.LookupList", "PlakaTuru")
                        .WithMany("AracPlakalari")
                        .HasForeignKey("PlakaTuruId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Guzergah");

                    b.Navigation("PlakaTuru");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracSahibi", b =>
                {
                    b.HasOne("Portal.Models.USYS.AracPlaka", "AracPlaka")
                        .WithMany("AracSahipleri")
                        .HasForeignKey("PlakaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.PlakaSahip", "PlakaSahip")
                        .WithMany("AracSahipleri")
                        .HasForeignKey("PlakaSahipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AracPlaka");

                    b.Navigation("PlakaSahip");
                });

            modelBuilder.Entity("Portal.Models.USYS.CezaYonetmelik", b =>
                {
                    b.HasOne("Portal.Models.Admin.User", "OlusturanKullanici")
                        .WithMany("CezaYonetmelikleri")
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", "PlakaTuru")
                        .WithMany("CezaYonetmelikleri")
                        .HasForeignKey("PlakaTuruId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OlusturanKullanici");

                    b.Navigation("PlakaTuru");
                });

            modelBuilder.Entity("Portal.Models.USYS.Denetim", b =>
                {
                    b.HasOne("Portal.Models.USYS.AracPlaka", "AracPlaka")
                        .WithMany()
                        .HasForeignKey("AracPlakaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", "CezaDelilTip")
                        .WithMany()
                        .HasForeignKey("CezaDelilTipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", "CezaDurum")
                        .WithMany()
                        .HasForeignKey("CezaDurumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", "DenetimTuru")
                        .WithMany()
                        .HasForeignKey("DenetimTuruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", "OlusturanKullanici")
                        .WithMany("Denetimler")
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AracPlaka");

                    b.Navigation("CezaDelilTip");

                    b.Navigation("CezaDurum");

                    b.Navigation("DenetimTuru");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimCeza", b =>
                {
                    b.HasOne("Portal.Models.USYS.CezaYonetmelik", "CezaYonetmelik")
                        .WithMany()
                        .HasForeignKey("CezaYonetmelikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.Denetim", "Denetim")
                        .WithMany()
                        .HasForeignKey("DenetimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", null)
                        .WithMany("DenetimCezalari")
                        .HasForeignKey("UserId");

                    b.Navigation("CezaYonetmelik");

                    b.Navigation("Denetim");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimGecmisi", b =>
                {
                    b.HasOne("Portal.Models.USYS.LookupList", "CezaDurum")
                        .WithMany()
                        .HasForeignKey("CezaDurumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.Denetim", "Denetim")
                        .WithMany("DenetimGecmisleri")
                        .HasForeignKey("DenetimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", "OlusturanKullanici")
                        .WithMany("DenetimGecmisleri")
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CezaDurum");

                    b.Navigation("Denetim");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimGecmisiFoto", b =>
                {
                    b.HasOne("Portal.Models.USYS.DenetimGecmisi", "DenetimGecmisi")
                        .WithMany("DenetimGecmisiFotolari")
                        .HasForeignKey("DenetimGecmisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.Foto", "Foto")
                        .WithMany()
                        .HasForeignKey("FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DenetimGecmisi");

                    b.Navigation("Foto");
                });

            modelBuilder.Entity("Portal.Models.USYS.Foto", b =>
                {
                    b.HasOne("Portal.Models.USYS.LookupList", "DosyaTuru")
                        .WithMany("Fotolar")
                        .HasForeignKey("DosyaTuruId");

                    b.HasOne("Portal.Models.Admin.User", "OlusturanKullanici")
                        .WithMany("Fotolar")
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DosyaTuru");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("Portal.Models.USYS.Guzergah", b =>
                {
                    b.HasOne("Portal.Models.USYS.LookupList", "Geometri")
                        .WithMany("GeometriGuzergahlar")
                        .HasForeignKey("GeometriId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Portal.Models.USYS.LookupList", "Ilce")
                        .WithMany("IlceGuzergahlar")
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Geometri");

                    b.Navigation("Ilce");
                });

            modelBuilder.Entity("Portal.Models.USYS.GuzergahZamanCizelge", b =>
                {
                    b.HasOne("Portal.Models.USYS.LookupList", "Gun")
                        .WithMany()
                        .HasForeignKey("GunId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Portal.Models.USYS.Guzergah", "Guzergah")
                        .WithMany("GuzergahZamanCizelgeleri")
                        .HasForeignKey("GuzergahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.Admin.User", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", "YerTuru")
                        .WithMany()
                        .HasForeignKey("YerTuruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gun");

                    b.Navigation("Guzergah");

                    b.Navigation("OlusturanKullanici");

                    b.Navigation("YerTuru");
                });

            modelBuilder.Entity("Portal.Models.USYS.LookupList", b =>
                {
                    b.HasOne("Portal.Models.USYS.LookUp", "LookUp")
                        .WithMany("LookUpListesi")
                        .HasForeignKey("LookUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.Models.USYS.LookupList", null)
                        .WithMany("AltLookUpListesi")
                        .HasForeignKey("LookupListId");

                    b.HasOne("Portal.Models.Admin.User", null)
                        .WithMany("LookupLists")
                        .HasForeignKey("UserId");

                    b.Navigation("LookUp");
                });

            modelBuilder.Entity("Portal.Models.USYS.PlakaSahip", b =>
                {
                    b.HasOne("Portal.Models.USYS.LookupList", "Cinsiyet")
                        .WithMany()
                        .HasForeignKey("CinsiyetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Portal.Models.Admin.User", "OlusturanKullanici")
                        .WithMany("PlakaSahipleri")
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cinsiyet");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("Portal.Models.USYS.UcretTakvim", b =>
                {
                    b.HasOne("Portal.Models.USYS.Guzergah", "Guzergah")
                        .WithMany("UcretTakvimleri")
                        .HasForeignKey("GuzergahId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guzergah");
                });

            modelBuilder.Entity("Portal.Models.Admin.Birim", b =>
                {
                    b.Navigation("Mudurlukler");
                });

            modelBuilder.Entity("Portal.Models.Admin.KanGrubu", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Portal.Models.Admin.Mudurluk", b =>
                {
                    b.Navigation("Subeler");
                });

            modelBuilder.Entity("Portal.Models.Admin.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Portal.Models.Admin.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Portal.Models.Admin.Sube", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Portal.Models.Admin.User", b =>
                {
                    b.Navigation("AracDenetimGecmisleri");

                    b.Navigation("AracDenetimleri");

                    b.Navigation("CezaYonetmelikleri");

                    b.Navigation("DenetimCezalari");

                    b.Navigation("DenetimGecmisleri");

                    b.Navigation("Denetimler");

                    b.Navigation("Fotolar");

                    b.Navigation("LookupLists");

                    b.Navigation("PlakaSahipleri");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracDenetim", b =>
                {
                    b.Navigation("AracDenetimGecmisleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.AracPlaka", b =>
                {
                    b.Navigation("AracDenetimleri");

                    b.Navigation("AracSahipleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.Denetim", b =>
                {
                    b.Navigation("DenetimGecmisleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.DenetimGecmisi", b =>
                {
                    b.Navigation("DenetimGecmisiFotolari");
                });

            modelBuilder.Entity("Portal.Models.USYS.Guzergah", b =>
                {
                    b.Navigation("GuzergahZamanCizelgeleri");

                    b.Navigation("UcretTakvimleri");
                });

            modelBuilder.Entity("Portal.Models.USYS.LookUp", b =>
                {
                    b.Navigation("LookUpListesi");
                });

            modelBuilder.Entity("Portal.Models.USYS.LookupList", b =>
                {
                    b.Navigation("AltLookUpListesi");

                    b.Navigation("AracPlakalari");

                    b.Navigation("CezaYonetmelikleri");

                    b.Navigation("Fotolar");

                    b.Navigation("GeometriGuzergahlar");

                    b.Navigation("IlceGuzergahlar");
                });

            modelBuilder.Entity("Portal.Models.USYS.PlakaSahip", b =>
                {
                    b.Navigation("AracSahipleri");
                });
#pragma warning restore 612, 618
        }
    }
}

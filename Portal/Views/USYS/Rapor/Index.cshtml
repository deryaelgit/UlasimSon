@model Portal.ViewModels.USYS.RaporViewModel
@{
    Layout = "_Layout";
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Searchable Table</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>
    <link rel="stylesheet" href="~/css/rapor.css" />
    <!-- Chart.js kütüphanesini ekle -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


</head>

<h1 class="card-title custom-title"><i class="far fa-chart-bar"></i> Tutanak - Denetim Raporları</h1>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-3 col-6 d-flex align-items-stretch">
            <!-- small box -->
            <div class="small-box flex-fill" style="background-color:rgba(220, 53, 69, 0.8);">
                <div class="inner">
                    <h3 class="text-white">@Model.IhlalTutanakSayisi</h3>
                    <p class="text-white">İHLÂL TUTANAĞI SAYISI</p>
                </div>
                <div class="icon">
                    <i class="ion ion-clipboard"></i>
                </div>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-6 d-flex align-items-stretch">
            <!-- small box -->
            <div class="small-box flex-fill" style="background-color:rgba(160, 196, 225, 1) ">
                <div class="inner">
                    <h3 class="text-white">@Model.IhtarTutanakSayisi</h3>
                    <p class="text-white">İHTAR TUTANAĞI SAYISI</p>
                </div>
                <div class="icon">
                    <i class="ion ion-alert"></i>
                </div>
            </div>
        </div>
        <!-- ./col -->

        <div class="col-lg-3 col-6 d-flex align-items-stretch">
            <!-- small box -->
            <div class="small-box flex-fill" style="background-color: rgba(144, 238, 144, 1);">
                <div class="inner">
                    <h3 class="text-white">@Model.DenetimSayisi</h3>
                    <p class="text-white">DENETİM SAYISI</p>
                </div>
                <div class="icon">
                    <i class="ion ion-stats-bars"></i>
                </div>
            </div>

        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-6 d-flex align-items-stretch">
            <!-- small box -->
            <div class="small-box bg-secondary flex-fill">
                <div class="inner">
                    <h3 style="color:white">@Model.ToplamAracSayisi</h3>
                    <p style="color:white">ARAÇ SAYISI</p>
                </div>
                <div class="icon">
                    <i class="fa fa-car"></i>
                </div>
            </div>
        </div>


    </div>
</div>
<!-- Chart Alanı -->
<div class="row">
    <!-- Pie Chart -->
    <div class="col-12 mb-4">
        <div class="card card-primary card-outline chart-card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="card-title">
                    <i class="fas fa-chart-pie"></i> Denetim - Tutanak Sayıları
                </h3>
                <div class="form-group" style="width: 200px; margin-bottom: 0;">
                    <label for="plaka">Plaka</label>
                    <select id="plakaSelect" class="form-control">
                        <option value="">Plaka Seçin</option>
                    </select>
                </div>
            </div>
            <div class="card-body" style="padding: 0;">
                <div id="pieChart" class="echart" style="width: 100%; height: 500px; position: relative; top: -20px;"></div>
            </div>
        </div>
    </div>
</div>


<style>
    .card-body {
        position: relative; /* İçindeki canvas'ın konumunu etkilemek için gerekli */
        overflow: hidden; /* Taşmaları gizler */
        height: 400px; /* Sabit yükseklik */
    }

</style>
<div class="row">
    <!-- Line Chart for İhlaller -->
    <div class="col-md-6 mb-4">
        <div class="card card-primary card-outline chart-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="far fa-chart-bar"></i> İhlâllerin Zamana Göre Grafiği
                </h3>
                <select id="timeRangeIhlal" class="form-select form-select-sm" style="width: auto; display: inline-block; margin-left: 10px;">
                    <option value="all">Tümü</option>
                    <option value="week">Son 1 Hafta</option>
                    <option value="month">Son 1 Ay</option>
                    <option value="year">Son 1 Yıl</option>
                </select>
            </div>
            <div class="card-body" style="padding: 0; height: 400px; overflow: hidden;">
                <canvas id="lineChartIhlal" style="width: 100%; height: 100%;"></canvas>
            </div>
        </div>
    </div>

    <!-- Line Chart for Denetimler -->
    <div class="col-md-6 mb-4">
        <div class="card card-primary card-outline chart-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="far fa-chart-bar"></i> Denetimlerin Zamana Göre Grafiği
                </h3>
                <select id="timeRangeDenetim" class="form-select form-select-sm" style="width: auto; display: inline-block; margin-left: 10px;">
                    <option value="all">Tümü</option>
                    <option value="week">Son 1 Hafta</option>
                    <option value="month">Son 1 Ay</option>
                    <option value="year">Son 1 Yıl</option>
                </select>
            </div>
            <div class="card-body" style="padding: 0; height: 400px; overflow: hidden;">
                <canvas id="lineChartDenetim" style="width: 100%; height: 100%;"></canvas>
            </div>
        </div>
    </div>


</div>



<!-- Modal ve Filtreleme Kısmı -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Filtre Seçenekleri</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="filterForm">
                    <div class="form-group">
                        <label for="dataType">Tutanak Türü:</label>
                        <select id="dataType" name="dataType" class="form-control">
                            <option value="">Hepsi</option>
                            <option value="ihlal">İhlal</option>
                            <option value="ihtar">İhtar</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="timeRange">Zaman Dilimi:</label>
                        <select id="timeRange" name="timeRange" class="form-control">
                            <option value="">Tümü</option>
                            <option value="day">Günlük</option>
                            <option value="week">Haftalık</option>
                            <option value="month">Aylık</option>
                            <option value="year">Yıllık</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="applyFilters">Uygula</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Bar chart -->
    <div class="col-md-12 mb-4">
        <div class="card card-primary card-outline bar-chart-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="far fa-chart-bar"></i>
                    Personel Denetim Sayısı
                </h3>
            </div>
            <div class="card-body center-content">
                <canvas id="bar-chart" style="width: 80%; height: 100%;"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Araç Denetim Sayısı Chart -->
    <div class="col-md-12 mb-4">
        <div class="card card-primary card-outline">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="far fa-chart-bar"></i>
                    Araç Denetim Sayısı
                </h3>
            </div>
            <div class="card-body center-content">
                <canvas id="aracDenetimChart" style="width: 80%; height: 100%;"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Ceza Türü Grafiği -->
    <div class="col-md-12 mb-4">
        <div class="card card-primary card-outline">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="far fa-chart-bar"></i>
                    Ceza Türü Grafiği
                </h3>
            </div>
            <div class="card-body center-content">
                <canvas id="cezaSayilariChartAm" style="width: 80%; height: 100%;"></canvas>
            </div>
        </div>
    </div>
</div>

<style>
    .plaka-ceza-card {
        min-height: 100px; /* Başlangıçta kısa tutmak için */
        transition: min-height 0.3s ease; /* Yavaş geçiş efekti */
    }

    .center-content {
        display: flex;
        justify-content: center;
        align-items: center;
    }

</style>

<!-- Plaka Ceza Listesi Card -->
<div class="card card-primary card-outline plaka-ceza-card">
    <div class="card-header">
        <h3 class="card-title">
            <i class="fas fa-list"></i>
            Plaka Ceza Listesi
        </h3>
    </div>
    <div class="card-body" style="padding: 10px; min-height: 30px; max-height: 400px; overflow-y: auto;">
        <!-- Search Bar and Date Range Button -->
        <div class="input-group rounded mb-3">
            <input type="search" class="form-control rounded" id="searchInputCeza" placeholder="Ceza Ara" aria-label="Search" aria-describedby="search-addon" />
            <span class="input-group-text border-0" id="search-addon">
                <i class="fas fa-search"></i>
            </span>
            <!-- Date Range Button -->
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#dateRangeModal" style="height: 38px; margin-left: 5px;">
                <i class="fas fa-calendar-alt"></i>
            </button>
        </div>

        <!-- Date Range Modal -->
        <div class="modal fade" id="dateRangeModal" tabindex="-1" aria-labelledby="dateRangeModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="dateRangeModalLabel">Tarih Aralığı Seç</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Başlangıç Tarihi</label>
                            <input type="date" class="form-control" id="startDate" />
                        </div>
                        <div class="mb-3">
                            <label for="endDate" class="form-label">Bitiş Tarihi</label>
                            <input type="date" class="form-control" id="endDate" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                        <button type="button" class="btn btn-primary" id="applyDateRange">Uygula</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Plaka Ceza Listesi Table -->
        <table class="table" id="cezaTable" style="display: none;">
            <thead id="tableHeader" style="display: none;">
                <tr>
                    <th>Plaka Numarası</th>
                    <th>Plaka Türü</th>
                    <th>Ceza Maddesi</th>
                    <th>Tutanak Türü</th>
                    <th>Oluşturma Tarihi</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.PlakaCezaListesi != null && Model.PlakaCezaListesi.Any())
                {
                    @foreach (var item in Model.PlakaCezaListesi)
                    {
                        <tr>
                            <td>@item.PlakaNumarasi</td>
                            <td class="plaka-turu">@item.PlakaTuruId</td>
                            <td>@item.AnahtarKelime</td>
                            <td>
                                @{
                                    string tutanakTuru = item.DenetimTuruId == 401 ? "ihlâl" :
                                    item.DenetimTuruId == 402 ? "ihtar" :
                                    "Denetim";
                                }
                                @tutanakTuru
                            </td>
                            <td>@item.OlusturmaTarihi.ToString("yyyy-MM-dd")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No records found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<!--Plaka Ceza Tablo Scripti-->
<script>
    const searchInput = document.getElementById('searchInputCeza');
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');
    const table = document.getElementById('cezaTable');
    const thead = document.getElementById('tableHeader');
    const tbody = table.getElementsByTagName('tbody')[0];
    const tr = tbody.getElementsByTagName('tr');

    // Plaka türü ID'si ile karşılık gelen metin değerleri
    const plakaTurleri = {
        201: "J-plaka",
        202: "M-plaka",
        203: "S-plaka",
        204: "T-plaka",
        205: "H-plaka",
        206: "Diğer"
    };

    const getPlakaTuru = (id) => plakaTurleri[id] || id;  // Eğer ID metne karşılık gelmiyorsa, ID'yi döndür

    // Tablodaki her satırı plaka türüne göre güncelle
    for (let i = 0; i < tr.length; i++) {
        const tdPlakaTuru = tr[i].getElementsByClassName('plaka-turu')[0];
        const plakaTuruId = tdPlakaTuru.textContent.trim();
        tdPlakaTuru.textContent = getPlakaTuru(plakaTuruId);  // Plaka türünü metin olarak yazdır
    }

    // Filtreleme fonksiyonu
    const filterTable = () => {
        const input = searchInput.value.trim().toLowerCase();
        const terms = input.split(" ").filter(term => term.trim() !== "");
        const startDate = startDateInput.value ? new Date(startDateInput.value) : null;
        const endDate = endDateInput.value ? new Date(endDateInput.value) : null;

        let rowVisible;

        for (let i = 0; i < tr.length; i++) {
            const td = tr[i].getElementsByTagName('td');
            rowVisible = true;

            for (let term of terms) {
                let termFound = false;

                for (let j = 0; j < td.length; j++) {
                    let cellValue = td[j].textContent || td[j].innerText;

                    if (j === 1) {
                        const plakaTuru = getPlakaTuru(cellValue.trim());
                        cellValue = plakaTuru.toLowerCase();
                    }

                    if (cellValue.toLowerCase().includes(term)) {
                        termFound = true;
                        break;
                    }
                }

                if (!termFound) {
                    rowVisible = false;
                    break;
                }
            }

            const olusturmaTarihi = new Date(td[4].textContent);
            if (startDate && olusturmaTarihi < startDate) {
                rowVisible = false;
            }
            if (endDate && olusturmaTarihi > endDate) {
                rowVisible = false;
            }

            tr[i].style.display = rowVisible ? "" : "none";
        }

        table.style.display = (input || startDate || endDate) ? "" : "none";
        thead.style.display = (input || startDate || endDate) ? "" : "none";
    };

    searchInput.addEventListener('keyup', filterTable);

    document.getElementById('applyDateRange').addEventListener('click', () => {
        filterTable();
        const modal = bootstrap.Modal.getInstance(document.getElementById('dateRangeModal'));
        modal.hide();
    });
</script>







<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<!--Pie Chart Scripti-->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Select2'yi başlatıyoruz
        $('#plakaSelect').select2({
            placeholder: 'Plaka Seçin',
            allowClear: true,
            ajax: {
                url: '@Url.Action("GetPlates", "Rapor")',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        term: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                id: item.value,
                                text: item.text
                            };
                        })
                    };
                },
                cache: true
            },
            language: {
                noResults: function () {
                    return "Sonuç bulunamadı";
                }
            }
        });

        // Chart'ı başlat
        const myPieChart = echarts.init(document.querySelector("#pieChart"));

        // Plaka seçildiğinde çalışacak olan olay dinleyicisi
        $('#plakaSelect').on('select2:select', function (e) {
            const selectedPlaka = e.params.data.id;

            if (selectedPlaka) {
                // AJAX isteği gönderiyoruz
                $.ajax({
                    url: '@Url.Action("GetTutanakDataByPlaka", "Rapor")',
                    type: 'GET',
                    data: { plakaId: selectedPlaka },
                    success: function (data) {
                        console.log("Success", data); // Gelen veriyi konsola basın

                        const chartData = [];
                        if (data.ihlal > 0) {
                            chartData.push({ value: data.ihlal, name: 'İhlâl', itemStyle: { color: 'rgba(220, 53, 69, 0.8)' } });
                        }
                        if (data.ihtar > 0) {
                            chartData.push({ value: data.ihtar, name: 'İhtar', itemStyle: { color: 'rgba(160, 196, 225, 1)' } });
                        }
                        if (data.denetim > 0) {
                            chartData.push({ value: data.denetim, name: 'Denetim', itemStyle: { color: 'rgba(144, 238, 144, 1)' } });
                        }

                        console.log("Chart Data", chartData); // Chart Data'nın doğru dolup dolmadığını kontrol edelim

                        // Chart'ı güncelleme
                        myPieChart.setOption({
                            series: [{
                                name: 'Denetim - Tutanak Sayıları',
                                type: 'pie',
                                radius: '65%',
                                data: chartData.length > 0 ? chartData : [{ value: 0, name: 'Veri Yok', itemStyle: { color: 'rgba(200, 200, 200, 1)' } }]
                            }]
                        });

                        // Eğer veri yoksa uyarı göster
                        if (chartData.length === 0) {
                            alert("Veri bulunamadı veya veriler sıfır.");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("Veri getirilemedi. Lütfen tekrar deneyiniz.");
                        console.error("Error: " + error);
                        console.error("Status: " + status);
                        console.error("XHR: ", xhr);
                    }
                });
            }
        });

        // Başlangıçtaki tutanak verileri
        const tutanakVerileri = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(new
        {
            Ihlal = Model.IhlalTutanakSayisi,
            Ihtar = Model.IhtarTutanakSayisi,
            Denetim = Model.DenetimSayisi
        }));

        // Başlangıçtaki chart verilerini hazırlıyoruz
        const initialChartData = [];
        if (tutanakVerileri.Ihlal > 0) {
            initialChartData.push({ value: tutanakVerileri.Ihlal, name: 'İhlâl', itemStyle: { color: 'rgba(220, 53, 69, 0.8)' } });
        }
        if (tutanakVerileri.Ihtar > 0) {
            initialChartData.push({ value: tutanakVerileri.Ihtar, name: 'İhtar', itemStyle: { color: 'rgba(160, 196, 225, 1)' } });
        }
        if (tutanakVerileri.Denetim > 0) {
            initialChartData.push({
                value: tutanakVerileri.Denetim, name: 'Denetim', itemStyle: {
                    color: 'rgba(144, 238, 144, 1)'
                }
            });
        }

        // Echarts pie chart'ını başlatıyoruz
        myPieChart.setOption({
            grid: {
                left: 0
            },
            tooltip: { trigger: 'item' },
            legend: {
                orient: 'vertical',
                left: '10%',
                top: 'middle',
                textStyle: { fontSize: 18, color: '#000' },
                itemWidth: 30,
                itemHeight: 30
            },
            series: [{
                name: 'Denetim - Tutanak Sayıları',
                type: 'pie',
                radius: '65%',
                data: initialChartData.length > 0 ? initialChartData : [{ value: 0, name: 'Veri Yok', itemStyle: { color: 'rgba(200, 200, 200, 1)' } }],
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                },
                label: { show: true, fontSize: 14, color: '#000' },
                labelLine: { show: true, length: 20, length2: 20 }
            }]
        });

        // Chart'ın yeniden boyutlandırılması için
        window.addEventListener('resize', function () {
            myPieChart.resize();
        });

        // Chart'ı yukarı kaydırmak için stil ekliyoruz
        document.querySelector('#pieChart').style.position = 'relative';
        document.querySelector('#pieChart').style.top = '-60px';
    });
</script>
<!--Line Chart Scriptleri-->
<script>
    var myLineChartIhlal, myLineChartDenetim;

    function getTutanakVerileri(type) {
        var timeRange = document.getElementById(type === 'ihlal' ? 'timeRangeIhlal' : 'timeRangeDenetim').value;

        $.ajax({
            url: '@Url.Action("GetTutanakVerileri", "Rapor")',
            type: 'GET',
            data: { timeRange: timeRange, dataType: type },
            success: function (data) {
                var ctx = document.getElementById(type === 'ihlal' ? 'lineChartIhlal' : 'lineChartDenetim').getContext('2d');

                if (type === 'ihlal' && myLineChartIhlal) {
                    myLineChartIhlal.destroy();
                } else if (type === 'denetim' && myLineChartDenetim) {
                    myLineChartDenetim.destroy();
                }

                var chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: data.labels,
                        datasets: [{
                            label: type === 'ihlal' ? 'İhlâl Tutanak Sayısı' : 'Denetim Sayısı',
                            data: data.values,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1,
                            fill: true,
                            pointRadius: 6, // Noktaların boyutunu ayarlayın
                            pointHoverRadius: 7 // Üzerine gelindiğinde boyutunu ayarlayın
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: { beginAtZero: true }
                        },
                        layout: {
                            padding: { right: 0 }
                        }
                    }
                });

                if (type === 'ihlal') {
                    myLineChartIhlal = chart;
                } else {
                    myLineChartDenetim = chart;
                }

                chart.resize();
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    }

    document.getElementById('timeRangeIhlal').addEventListener('change', function () {
        getTutanakVerileri('ihlal');
    });
    document.getElementById('timeRangeDenetim').addEventListener('change', function () {
        getTutanakVerileri('denetim');
    });

    // Varsayılan verileri yükle
    getTutanakVerileri('ihlal');
    getTutanakVerileri('denetim');
</script>






<!--Personel Denetim Chart code -->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Kullanıcı denetim sayıları verisini JSON formatına çevirme
        const kullaniciDenetimSayilari = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.KullaniciDenetimSayilari));

        // Verileri kontrol etmek için konsola yazdırın
        console.log(kullaniciDenetimSayilari);

        // Denetim sayılarına göre en çoktan en aza sıralama ve ilk 20 elemanı alma
        const sortedDenetimSayilari = kullaniciDenetimSayilari
            .sort((a, b) => b.DenetimAdedi - a.DenetimAdedi)
            .slice(0, 20);

        // Kategoriler ve verilerin hazırlanması
        const labels = sortedDenetimSayilari.map(item => item.KullaniciAdi);
        const data = sortedDenetimSayilari.map(item => Math.round(item.DenetimAdedi));

        // Bar chart'ı oluştur
        const ctx = document.getElementById('bar-chart').getContext('2d');
        const barChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Denetim Adedi',
                    data: data,
                    backgroundColor: 'rgba(144, 238, 144, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Denetim Adedi'
                        },
                        ticks: {
                            stepSize: 1 // Y ekseninde tam sayılar için adım boyutu
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Personeller'
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return context.dataset.label + ': ' + context.raw;
                            }
                        }
                    }
                }
            }
        });
    });
</script>

<!--Plaka Denetim Chart code -->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Araç denetim sayıları verisini JSON formatına çevirme
        const aracDenetimSayilari = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AracDenetimSayilari));

        // Verileri kontrol etmek için konsola yazdırın
        console.log(aracDenetimSayilari);

        // Denetim sayılarına göre en çoktan en aza sıralama ve ilk 20 elemanı alma
        const sortedDenetimSayilari = aracDenetimSayilari
            .sort((a, b) => b.DenetimAdedi - a.DenetimAdedi)
            .slice(0, 20);

        // Kategoriler ve verilerin hazırlanması
        const labels = sortedDenetimSayilari.map(item => item.PlakaNumarasi);
        const data = sortedDenetimSayilari.map(item => Math.round(item.DenetimAdedi));

        // Bar chart'ı oluştur
        const ctx = document.getElementById('aracDenetimChart').getContext('2d');
        const aracDenetimChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Denetim Adedi',
                    data: data,
                    backgroundColor: 'rgba(144, 238, 144, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Denetim Adedi'
                        },
                        ticks: {
                            stepSize: 1 // Y ekseninde tam sayılar için adım boyutu
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Plakalar'
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return context.dataset.label + ': ' + context.raw + ' Tutanak';
                            }
                        }
                    }
                }
            }
        });
    });
</script>



<!--Ceza Türü Chart code -->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Ceza sayıları verisini JSON formatına çevirme
        const cezaSayilari = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CezaSayilari));

        // Verileri kontrol etmek için konsola yazdırın
        console.log(cezaSayilari);

        // En büyük 20 elemanı almak için ceza sayıları verisini sıralayın
        const top20CezaSayilari = cezaSayilari
            .sort((a, b) => b.CezaAdedi - a.CezaAdedi) // Büyükten küçüğe sırala
            .slice(0, 20); // İlk 20 elemanı al

        // Kategoriler ve verilerin hazırlanması
        const labels = top20CezaSayilari.map(item => item.YonetmelikAnahtarKelime);
        const data = top20CezaSayilari.map(item => Math.round(item.CezaAdedi));

        // Bar chart'ı oluştur
        const ctx = document.getElementById('cezaSayilariChartAm').getContext('2d');
        const barChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Ceza Adedi',
                    data: data,
                    backgroundColor: 'rgba(220, 53, 69, 0.8)',
                    borderColor: 'rgba(220, 53, 69, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Ceza Adedi'
                        },
                        ticks: {
                            stepSize: 1 // Y ekseninde tam sayılar için adım boyutu
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Maddeler'
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return context.dataset.label + ': ' + context.raw + ' Ceza';
                            }
                        }
                    }
                }
            }
        });
    });
</script>





